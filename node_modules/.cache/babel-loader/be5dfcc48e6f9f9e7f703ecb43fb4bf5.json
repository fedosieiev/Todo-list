{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projects\\\\todo\\\\src\\\\components\\\\todo-list-item\\\\todo-list-item.js\";\nimport React, { Component } from 'react';\nimport \"./todo-list-item.css\";\n\nvar TodoListItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoListItem, _Component);\n\n  function TodoListItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      done: false,\n      important: false\n    };\n\n    _this.onLabalClick = function () {\n      _this.setState(function (_ref) {\n        var done = _ref.done;\n        return {\n          done: !done\n        };\n      });\n    };\n\n    _this.onMarkImportant = function () {\n      _this.setState(function (_ref2) {\n        var important = _ref2.important;\n        return {\n          important: !important\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoListItem, [{\n    key: \"render\",\n    value: function render() {\n      var label = this.props.label;\n      var _this$state = this.state,\n          done = _this$state.done,\n          important = _this$state.important;\n      var classNames = 'todo-list-item';\n\n      if (done) {\n        classNames += ' done ';\n      }\n\n      if (important) {\n        classNames += ' important';\n      }\n\n      return React.createElement(\"span\", {\n        className: classNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"todo-list-item-label\",\n        onClick: this.onLabalClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, label), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success btn-sm float-right\",\n        onClick: this.onMarkImportant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-exclamation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger btn-sm float-right\",\n        onClick: this.props.ondeleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-trash-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TodoListItem;\n}(Component);\n\nexport { TodoListItem as default };","map":{"version":3,"sources":["D:\\Projects\\todo\\src\\components\\todo-list-item\\todo-list-item.js"],"names":["React","Component","TodoListItem","state","done","important","onLabalClick","setState","onMarkImportant","label","props","classNames","ondeleted"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAO,sBAAP;;IAEqBC,Y;;;;;;;;;;;;;;;;;UAEjBC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,SAAS,EAAE;AAFP,K;;UAKRC,Y,GAAe,YAAM;AACnB,YAAKC,QAAL,CAAe,gBAAY;AAAA,YAAVH,IAAU,QAAVA,IAAU;AACvB,eAAO;AACHA,UAAAA,IAAI,EAAE,CAACA;AADJ,SAAP;AAGH,OAJD;AAKD,K;;UAEDI,e,GAAkB,YAAM;AACpB,YAAKD,QAAL,CAAc,iBAAgB;AAAA,YAAdF,SAAc,SAAdA,SAAc;AAC1B,eAAM;AACFA,UAAAA,SAAS,EAAE,CAACA;AADV,SAAN;AAGH,OAJD;AAKH,K;;;;;;;6BAEQ;AAAA,UACEI,KADF,GACY,KAAKC,KADjB,CACED,KADF;AAAA,wBAEsB,KAAKN,KAF3B;AAAA,UAEGC,IAFH,eAEGA,IAFH;AAAA,UAEQC,SAFR,eAEQA,SAFR;AAIL,UAAIM,UAAU,GAAG,gBAAjB;;AACA,UAAIP,IAAJ,EAAU;AACNO,QAAAA,UAAU,IAAI,QAAd;AACH;;AAED,UAAIN,SAAJ,EAAc;AACVM,QAAAA,UAAU,IAAG,YAAb;AACH;;AAEA,aACG;AAAM,QAAA,SAAS,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,OAAO,EAAG,KAAKL,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGG,KAHH,CADM,EAOA;AAAQ,QAAA,IAAI,EAAC,QAAb;AACQ,QAAA,SAAS,EAAC,4CADlB;AAEQ,QAAA,OAAO,EAAE,KAAKD,eAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGF;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHE,CAPA,EAaJ;AAAQ,QAAA,IAAI,EAAC,QAAb;AACQ,QAAA,SAAS,EAAC,2CADlB;AAEQ,QAAA,OAAO,EAAI,KAAKE,KAAL,CAAWE,SAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAbI,CADH;AAsBJ;;;;EA1DqCX,S;;SAArBC,Y","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport \"./todo-list-item.css\";\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    state = {\r\n        done: false,\r\n        important: false\r\n    };\r\n\r\n    onLabalClick = () => {\r\n      this.setState (({done}) => {\r\n          return {\r\n              done: !done\r\n          };\r\n      });\r\n    };\r\n\r\n    onMarkImportant = () => {\r\n        this.setState(({important})=> {\r\n            return{\r\n                important: !important\r\n            };\r\n        });\r\n    };\r\n\r\n    render (){\r\n        const {label } = this.props;\r\n        const { done,important } = this.state;\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done ';\r\n        }\r\n\r\n        if (important){\r\n            classNames +=' important';\r\n        }\r\n\r\n         return (\r\n            <span className={classNames}>\r\n      <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={ this.onLabalClick }>\r\n        {label}\r\n      </span>\r\n\r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick={this.onMarkImportant}>\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\"\r\n                onClick = {this.props.ondeleted}>\r\n\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n         );\r\n    };\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}